
#include <SoftwareSerial.h>
SoftwareSerial BTSerial(2, 3);  // RX, TX pins for the Bluetooth module

int sensorPin1 = A2;
int sensorPin2 = A3;
int sensorPin3 = A4;
int sensorPin4 = A5;


int previousValue1 = 0;
int previousValue2 = 0;
int previousValue3 = 0;
int previousValue4 = 0;

String combinations = "";

void setup() {
  Serial.begin(9600);
  BTSerial.begin(9600);  // Bluetooth module baud rate
}

void loop() {
  int value1 = analogRead(sensorPin1);
  int value2 = analogRead(sensorPin2);
  int value3 = analogRead(sensorPin3);
  int value4 = analogRead(sensorPin4);

  if (value1 < 500) {
    // Serial.println("Object detected near sensor 1");
  } else {
    combinations += "empty1,";
  }
  previousValue1 = value1;

  if (value2 < 500) {
    // Serial.println("Object detected near sensor 2");
  } else {
    combinations += "empty2,";
  }
  previousValue2 = value2;

  if (value3 < 500) {
    // Serial.println("Object detected near sensor 3");
  } else {
    combinations += "empty3,";
  }
  previousValue3 = value3;

  if (value4 < 500) {
    // Serial.println("Object detected near sensor 4");
  } else {
    combinations += "empty4,";
  }
  previousValue4 = value4;
  printCombinations();

  delay(1000);  // Adjust the delay as needed
  // combinations.trim();
  // combinations.remove(combinations.length() - 1);
  // BTSerial.println(combinations);
  // Serial.println("BT GOOD");
  // Serial.println(combinations);

}

// Print combinations to Serial Monitor
void printCombinations() {
  combinations.trim();
  combinations.remove(combinations.length() - 1);
  char test = BTSerial.read();
  // Print combinations to Serial Monitor
  if (combinations.length() > 0) {
    Serial.println(combinations);
    BTSerial.println(combinations);

  } else {
    BTSerial.println("All Compartments filled");
        Serial.println("All Compartments filled");

  }

  // Clear combinations for the next iteration
  combinations = "";
}
